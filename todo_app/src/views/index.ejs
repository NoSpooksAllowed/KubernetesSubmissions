<%- include('partials/header') %>

<div class="container">
    <h1>Hello World! üåç</h1>
    <p>Welcome to the Todo App</p>
    <p>This is a simple Express.js application running on port <%= port %></p>
    
    <% if (imageUrl) { %>
    <div class="image-section">
        <h2>Hourly Image üì∏</h2>
        <div class="image-container">
            <img src="<%= imageUrl %>" alt="Random hourly image from Lorem Picsum" class="hourly-image">
        </div>
        <div class="image-info">
            <p><strong>Image Status:</strong> 
                <% if (isCached) { %>
                    <span class="status-cached">‚úÖ Cached</span>
                <% } else { %>
                    <span class="status-fresh">üîÑ Fresh</span>
                <% } %>
            </p>
            <% if (imageMetadata && imageMetadata.lastUpdated) { %>
            <p><strong>Last Updated:</strong> <%= new Date(imageMetadata.lastUpdated).toLocaleString() %></p>
            <p><strong>Next Refresh:</strong> <%= new Date(nextRefresh).toLocaleString() %></p>
            <% } %>
        </div>
    </div>
    <% } else { %>
    <div class="image-section">
        <h2>Hourly Image üì∏</h2>
        <div class="image-error">
            <p>‚ö†Ô∏è Image temporarily unavailable</p>
        </div>
    </div>
    <% } %>
    
    <!-- Todo Section -->
    <div class="todo-section">
        <h2>Todo List üìù</h2>
        
        <!-- Todo Input Form -->
        <div class="todo-input-container">
            <form class="todo-form">
                <div class="input-group">
                    <input 
                        type="text" 
                        id="todoInput" 
                        placeholder="Enter your todo (max 140 characters)" 
                        maxlength="140"
                        class="todo-input"
                    >
                    <button type="submit" class="send-button">Send</button>
                </div>
                <div class="char-counter">
                    <span id="charCount">0</span>/140 characters
                </div>
            </form>
        </div>
        
        <!-- Todo List -->
        <div class="todo-list">
            <h3>Your Todos:</h3>
            <ul class="todos" id="todoList">
                <% if (todos && todos.length > 0) { %>
                    <% todos.forEach(todo => { %>
                        <li class="todo-item" data-id="<%= todo.id %>">
                            <span class="todo-text"><%= todo.text %></span>
                            <button class="delete-btn" data-todo-id="<%= todo.id %>">√ó</button>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li class="no-todos">No todos yet. Add one above!</li>
                <% } %>
            </ul>
        </div>
    </div>
    
    <div class="port-info">
        <strong>Server Information:</strong><br>
        Port: <%= port %><br>
        Status: Running <span class="status-badge">‚úÖ</span>
    </div>
</div>

<script>
// Character counter for todo input
document.getElementById('todoInput').addEventListener('input', function() {
    const charCount = this.value.length;
    document.getElementById('charCount').textContent = charCount;
    
    // Change color when approaching limit
    const counter = document.getElementById('charCount');
    if (charCount > 120) {
        counter.style.color = '#ff6b6b';
    } else if (charCount > 100) {
        counter.style.color = '#ffa726';
    } else {
        counter.style.color = '#666';
    }
});

// Handle todo form submission
document.querySelector('.todo-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const todoInput = document.getElementById('todoInput');
    const todoText = todoInput.value.trim();
    
    if (!todoText) {
        alert('Please enter a todo text');
        return;
    }
    
    if (todoText.length > 140) {
        alert('Todo text must be 140 characters or less');
        return;
    }
    
    try {
        const response = await fetch('/todos', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ text: todoText })
        });
        
        if (response.ok) {
            // Clear the input
            todoInput.value = '';
            document.getElementById('charCount').textContent = '0';
            
            // Reload the page to show the new todo
            window.location.reload();
        } else {
            const error = await response.json();
            alert('Error creating todo: ' + error.error);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to create todo. Please try again.');
    }
});

// Handle delete button clicks using event delegation
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('delete-btn')) {
        const todoId = e.target.getAttribute('data-todo-id');
        deleteTodo(todoId);
    }
});

// Delete todo function
async function deleteTodo(todoId) {
    if (confirm('Are you sure you want to delete this todo?')) {
        try {
            // For now, we'll just reload the page since we don't have a delete endpoint yet
            // In a real app, you'd make a DELETE request to /todos/:id
            console.log('Delete todo:', todoId);
            alert('Delete functionality not implemented yet. This would delete todo ID: ' + todoId);
        } catch (error) {
            console.error('Error deleting todo:', error);
            alert('Failed to delete todo. Please try again.');
        }
    }
}
</script>

<%- include('partials/footer') %> 